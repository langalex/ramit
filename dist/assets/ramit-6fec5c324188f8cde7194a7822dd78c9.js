define("ramit/app",["ember","ember/resolver","ember/load-initializers","ramit/config/environment","ramit/storage","exports"],function(t,e,a,n,s,r){"use strict";var o=t["default"],i=e["default"],c=a["default"],u=n["default"],l=s["default"];o.MODEL_FACTORY_INJECTIONS=!0,l();var h=o.Application.extend({modulePrefix:u.modulePrefix,podModulePrefix:u.podModulePrefix,Resolver:i});c(h,u.modulePrefix),remoteStorage.displayWidget(),r["default"]=h}),define("ramit/storage",["exports"],function(t){"use strict";t["default"]=function(){RemoteStorage.defineModule("ramit",function(t){return t.declareType("account",{description:"an account with a balance",type:"object",properties:{id:{type:"string",format:"id"},name:{type:"string"}}}),t.declareType("transaction",{description:"a financial transaction",type:"object",properties:{id:{type:"string",format:"id"},account_id:{type:"string",format:"id"},description:{type:"string"},amount:{type:"integer"},date:{type:"integer"}}}),{exports:{addAccount:function(e){var a=$.Deferred(),n=(new Date).getTime().toString(),s={id:n,name:e};return t.storeObject("account","accounts/"+n,s).then(function(){a.resolve(s)}),a.promise()},removeAccount:function(e){t.remove("accounts/"+e)},onAddAccount:function(e){t.on("change",function(t){void 0===t.oldValue&&"http://remotestorage.io/spec/modules/ramit/account"===t.newValue["@context"]&&e(t.newValue)})},onRemoveAccount:function(e){t.on("change",function(t){void 0===t.newValue&&"http://remotestorage.io/spec/modules/ramit/account"===t.oldValue["@context"]&&e(t.oldValue)})},addTransaction:function(e,a,n){var s=(new Date).getTime().toString(),r={id:s,account_id:e,description:a||"",amount:n,date:(new Date).getTime()};t.storeObject("transaction","transactions/"+s,r);var o=$.Deferred();return o.resolve(r),o.promise()},removeTransaction:function(e){t.remove("transactions/"+e)},onAddTransaction:function(e){t.on("change",function(t){void 0===t.oldValue&&"http://remotestorage.io/spec/modules/ramit/transaction"===t.newValue["@context"]&&e(t.newValue)})},onRemoveTransaction:function(e){t.on("change",function(t){void 0===t.newValue&&"http://remotestorage.io/spec/modules/ramit/transaction"===t.oldValue["@context"]&&e(t.oldValue)})}}}}),remoteStorage.access.claim("ramit","rw"),remoteStorage.caching.enable("/ramit/")}}),define("ramit/components/nav-bar",["ember","exports"],function(t,e){"use strict";var a=t["default"];e["default"]=a.Component.extend({title:"Ramit"})}),define("ramit/components/remove-button",["ember","exports"],function(t,e){"use strict";var a=t["default"];e["default"]=a.Component.extend({showConfirm:!1,actions:{toggleConfirm:function(){this.toggleProperty("showConfirm")},sendDelete:function(){this.sendAction()}}})}),define("ramit/controllers/account",["ember","exports"],function(t,e){"use strict";var a=t["default"];e["default"]=a.Controller.extend({actions:{deleteAccount:function(){this.get("model")["delete"](),this.transitionToRoute("accounts")}},sortedTransactions:function(){return this.get("model.transactions").sortBy("date").reverse()}.property("model.transactions.@each")})}),define("ramit/controllers/accounts",["ember","exports"],function(t,e){"use strict";var a=t["default"];e["default"]=a.ArrayController.extend({sortProperties:["name"],balances:a.computed.mapBy("model","balance"),totalBalance:a.computed.sum("balances")})}),define("ramit/controllers/new_account",["ember","ramit/models/account","exports"],function(t,e,a){"use strict";var n=t["default"],s=e["default"];a["default"]=n.Controller.extend({actions:{createAccount:function(){var t=this,e=s.create({name:this.get("name")});this.set("name",void 0),e.save().then(function(){t.transitionToRoute("accounts")})}}})}),define("ramit/models/account",["ember","ramit/models/transaction","exports"],function(t,e,a){"use strict";var n=t["default"],s=e["default"],r=n.Object.extend({balance:function(){return this.get("transactions").reduce(function(t,e){return t+e.get("amount")},0)}.property("transactions.@each"),transactions:function(){return this.get("all_transactions").filterBy("account_id",this.get("id"))}.property("account_id","all_transactions.@each"),all_transactions:function(){return s.all}.property(),save:function(){var t=this;return remoteStorage.ramit.addAccount(this.get("name")).then(function(e){t.setProperties(e),r.all.pushObject(t)})},"delete":function(){remoteStorage.ramit.removeAccount(this.get("id")),r.all.removeObject(this)}});r.reopenClass({all:[],find:function(t){return t?r.all.find(function(e){return e.get("id")===t}):r.all}}),remoteStorage.ramit.onAddAccount(function(t){var e=r.all.find(function(e){return e.get("id")===t.id});e?e.setProperties(t):r.all.pushObject(r.create(t))}),remoteStorage.ramit.onRemoveAccount(function(t){var e=r.find(t.id);r.all.removeObject(e)}),a["default"]=r}),define("ramit/models/transaction",["ember","exports"],function(t,e){"use strict";var a=t["default"],n=a.Object.extend({save:function(){var t=this;return remoteStorage.ramit.addTransaction(this.get("account.id"),this.get("description"),this.get("amount")).then(function(e){t.setProperties(e),n.all.pushObject(t)})},"delete":function(){remoteStorage.ramit.removeTransaction(this.get("id")),n.all.removeObject(this)}});n.reopenClass({all:[],find:function(t){return t?n.all.find(function(e){return e.get("id")===t}):n.all}}),remoteStorage.ramit.onAddTransaction(function(t){var e=n.all.find(function(e){return e.get("id")===t.id});e?e.setProperties(t):n.all.pushObject(n.create(t))}),remoteStorage.ramit.onRemoveTransaction(function(t){var e=n.find(t.id);n.all.removeObject(e)}),e["default"]=n}),define("ramit/controllers/new_transaction",["ember","ramit/models/transaction","exports"],function(t,e,a){"use strict";var n=t["default"],s=e["default"];a["default"]=n.Controller.extend({actions:{createTransaction:function(){var t=this.get("model"),e=s.create({account:t,description:this.get("description"),amount:parseInt(this.get("amount"),10)});e.save(),this.setProperties({description:void 0,amount:void 0}),this.transitionToRoute("account",t)}}})}),define("ramit/controllers/transaction",["ember","exports"],function(t,e){"use strict";var a=t["default"];e["default"]=a.Controller.extend({actions:{deleteTransaction:function(){var t=this.get("model"),e=t.get("account_id");t["delete"](),this.transitionToRoute("account",e)}}})}),define("ramit/helpers/format-date",["exports"],function(t){"use strict";t["default"]=function(t){var e=new Date(this.get(t));return e.getFullYear()+"-"+(e.getMonth()+1)+"-"+e.getDate()}}),define("ramit/initializers/export-application-global",["ember","ramit/config/environment","exports"],function(t,e,a){"use strict";function n(t,e){var a=s.String.classify(r.modulePrefix);r.exportApplicationGlobal&&(window[a]=e)}var s=t["default"],r=e["default"];a.initialize=n,a["default"]={name:"export-application-global",initialize:n}}),define("ramit/router",["ember","ramit/config/environment","exports"],function(t,e,a){"use strict";var n=t["default"],s=e["default"],r=n.Router.extend({location:s.locationType});r.map(function(){this.route("index",{path:"/"}),this.route("accounts",{path:"accounts"}),this.route("account",{path:"account/:account_id"}),this.route("transaction",{path:"transaction/:transaction_id"}),this.route("new_transaction",{path:":account_id/new_transaction"}),this.route("new_account",{path:"new_account"}),this.route("help",{path:"help"})}),a["default"]=r}),define("ramit/routes/account",["ember","ramit/models/account","exports"],function(t,e,a){"use strict";var n=t["default"],s=e["default"];a["default"]=n.Route.extend({model:function(t){return s.find(t.account_id)}})}),define("ramit/routes/accounts",["ember","ramit/models/account","exports"],function(t,e,a){"use strict";var n=t["default"],s=e["default"];a["default"]=n.Route.extend({model:function(){return s.find()}})}),define("ramit/routes/application",["ember","exports"],function(t,e){"use strict";var a=t["default"];e["default"]=a.Route.extend({setupController:function(){this.transitionTo("accounts")}})}),define("ramit/routes/new_transaction",["ember","exports"],function(t,e){"use strict";var a=t["default"];e["default"]=a.Route.extend({model:function(t){return this.store.find("account",t.account_id)}})}),define("ramit/routes/transaction",["ember","ramit/models/transaction","exports"],function(t,e,a){"use strict";var n=t["default"],s=e["default"];a["default"]=n.Route.extend({model:function(t){return s.find(t.id)}})}),define("ramit/templates/account",["exports"],function(t){"use strict";t["default"]=Ember.Handlebars.template({1:function(t,e,a,n){var s,r=e.helperMissing,o="";return n.buffer.push("    <p>\n"),s=(e["link-to"]||t&&t["link-to"]||r).call(t,"new_transaction","model",{name:"link-to",hash:{"class":"add-transaction btn btn-primary form-control"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},fn:this.program(2,n),inverse:this.noop,types:["STRING","ID"],contexts:[t,t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push('    </p>\n    <div class="list-group">\n      <div class="list-group-item">\n        <strong>Balance</strong>\n        <strong class="pull-right">'),s=e._triageMustache.call(t,"model.balance",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push('</strong>\n      </div>\n      <div class="transactions">\n'),s=e.each.call(t,"transaction","in","sortedTransactions",{name:"each",hash:{},hashTypes:{},hashContexts:{},fn:this.program(4,n),inverse:this.noop,types:["ID","ID","ID"],contexts:[t,t,t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push("      </div>\n    </div>\n"),o},2:function(t,e,a,n){n.buffer.push('        <span class="glyphicon glyphicon-plus"></span>\n        Add Transaction\n')},4:function(t,e,a,n){var s,r=e.helperMissing,o="";return s=(e["link-to"]||t&&t["link-to"]||r).call(t,"transaction","transaction",{name:"link-to",hash:{"class":"list-group-item transaction"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},fn:this.program(5,n),inverse:this.noop,types:["STRING","ID"],contexts:[t,t],data:n}),null!=s&&n.buffer.push(s),o},5:function(t,e,a,n){var s,r="";return s=e["if"].call(t,"transaction.description",{name:"if",hash:{},hashTypes:{},hashContexts:{},fn:this.program(6,n),inverse:this.program(8,n),types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push('            <div class="amount pull-right">\n              '),s=e._triageMustache.call(t,"transaction.amount",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push("\n            </div>\n"),r},6:function(t,e,a,n){var s,r="";return n.buffer.push("              "),s=e._triageMustache.call(t,"transaction.description",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push("\n"),r},8:function(t,e,a,n){n.buffer.push("              -\n")},10:function(t,e,a,n){var s,r=e.helperMissing,o="";return n.buffer.push("    <h4>New account</h4>\n    <p>To get started with this account put some money in it.</p>\n    <p>\n"),s=(e["link-to"]||t&&t["link-to"]||r).call(t,"new_transaction","model",{name:"link-to",hash:{"class":"btn btn-primary add-transaction"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},fn:this.program(2,n),inverse:this.noop,types:["STRING","ID"],contexts:[t,t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push("    </p>\n"),o},compiler:[6,">= 2.0.0-beta.1"],main:function(t,e,a,n){var s,r=e.helperMissing,o=this.escapeExpression,i="";return n.buffer.push(o((e["nav-bar"]||t&&t["nav-bar"]||r).call(t,{name:"nav-bar",hash:{"back-route":"accounts",title:"model.name"},hashTypes:{"back-route":"STRING",title:"ID"},hashContexts:{"back-route":t,title:t},types:[],contexts:[],data:n}))),n.buffer.push('\n<div class="container">\n'),s=e["if"].call(t,"sortedTransactions",{name:"if",hash:{},hashTypes:{},hashContexts:{},fn:this.program(1,n),inverse:this.program(10,n),types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push('\n  <div class="pull-right">\n    '),n.buffer.push(o((e["remove-button"]||t&&t["remove-button"]||r).call(t,{name:"remove-button",hash:{action:"deleteAccount","confirm-label":"Confirm Remove Account","remove-label":"Remove Account..."},hashTypes:{action:"STRING","confirm-label":"STRING","remove-label":"STRING"},hashContexts:{action:t,"confirm-label":t,"remove-label":t},types:[],contexts:[],data:n}))),n.buffer.push('\n  </div>\n  <p class="clearfix"></p>\n</div>\n'),i},useData:!0})}),define("ramit/templates/accounts",["exports"],function(t){"use strict";t["default"]=Ember.Handlebars.template({1:function(t,e,a,n){var s,r=e.helperMissing,o="";return s=(e["link-to"]||t&&t["link-to"]||r).call(t,"new_account",{name:"link-to",hash:{},hashTypes:{},hashContexts:{},fn:this.program(2,n),inverse:this.noop,types:["STRING"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),o},2:function(t,e,a,n){n.buffer.push('    <span class="fa fa-plus"></span>\n')},4:function(t,e,a,n){var s,r=e.helperMissing,o=this.escapeExpression,i="";return n.buffer.push('    <div class="list-group">\n'),s=e.each.call(t,"account","in","arrangedContent",{name:"each",hash:{},hashTypes:{},hashContexts:{},fn:this.program(5,n),inverse:this.noop,types:["ID","ID","ID"],contexts:[t,t,t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push('      <div class="list-group-item">\n        <strong>Total</strong>\n        <div class="pull-right">\n          <strong>'),s=e._triageMustache.call(t,"totalBalance",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push('</strong>\n        </div>\n      </div>\n    </div>\n    <p class="footer">\n      '),n.buffer.push(o((e["link-to"]||t&&t["link-to"]||r).call(t,"help","help",{name:"link-to",hash:{},hashTypes:{},hashContexts:{},types:["STRING","STRING"],contexts:[t,t],data:n}))),n.buffer.push("\n    </p>\n"),i},5:function(t,e,a,n){var s,r=e.helperMissing,o="";return s=(e["link-to"]||t&&t["link-to"]||r).call(t,"account","account",{name:"link-to",hash:{"class":"list-group-item account"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},fn:this.program(6,n),inverse:this.noop,types:["STRING","ID"],contexts:[t,t],data:n}),null!=s&&n.buffer.push(s),o},6:function(t,e,a,n){var s,r="";return n.buffer.push("          "),s=e._triageMustache.call(t,"account.name",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push('\n          <div class="pull-right amount">\n            '),s=e._triageMustache.call(t,"account.balance",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push("\n          </div>\n"),r},8:function(t,e,a,n){var s=e.helperMissing,r=this.escapeExpression,o="";return n.buffer.push("    "),n.buffer.push(r((e.render||t&&t.render||s).call(t,"help-content",{name:"render",hash:{},hashTypes:{},hashContexts:{},types:["STRING"],contexts:[t],data:n}))),n.buffer.push("\n"),o},compiler:[6,">= 2.0.0-beta.1"],main:function(t,e,a,n){var s,r,o,i="function",c=e.helperMissing,u=e.blockHelperMissing,l="";return r=null!=(r=e["nav-bar"]||(null!=t?t["nav-bar"]:t))?r:c,o={name:"nav-bar",hash:{},hashTypes:{},hashContexts:{},fn:this.program(1,n),inverse:this.noop,types:[],contexts:[],data:n},s=typeof r===i?r.call(t,o):r,e["nav-bar"]||(s=u.call(t,s,o)),null!=s&&n.buffer.push(s),n.buffer.push('<div class="container">\n'),s=e["if"].call(t,"content",{name:"if",hash:{},hashTypes:{},hashContexts:{},fn:this.program(4,n),inverse:this.program(8,n),types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push("</div>\n"),l},useData:!0})}),define("ramit/templates/application",["exports"],function(t){"use strict";t["default"]=Ember.Handlebars.template({compiler:[6,">= 2.0.0-beta.1"],main:function(t,e,a,n){var s,r="";return s=e._triageMustache.call(t,"outlet",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push("\n"),r},useData:!0})}),define("ramit/templates/components/nav-bar",["exports"],function(t){"use strict";t["default"]=Ember.Handlebars.template({1:function(t,e,a,n){var s,r="";return s=e["if"].call(t,"back-model",{name:"if",hash:{},hashTypes:{},hashContexts:{},fn:this.program(2,n),inverse:this.program(5,n),types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),r},2:function(t,e,a,n){var s,r=e.helperMissing,o="";return s=(e["link-to"]||t&&t["link-to"]||r).call(t,"back-route","back-model",{name:"link-to",hash:{},hashTypes:{},hashContexts:{},fn:this.program(3,n),inverse:this.noop,types:["ID","ID"],contexts:[t,t],data:n}),null!=s&&n.buffer.push(s),o},3:function(t,e,a,n){n.buffer.push('                <span class="fa fa-chevron-left"></span>\n')},5:function(t,e,a,n){var s,r=e.helperMissing,o="";return s=(e["link-to"]||t&&t["link-to"]||r).call(t,"back-route",{name:"link-to",hash:{},hashTypes:{},hashContexts:{},fn:this.program(3,n),inverse:this.noop,types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),o},compiler:[6,">= 2.0.0-beta.1"],main:function(t,e,a,n){var s,r="";return n.buffer.push('<nav class="navbar navbar-default navbar-fixed-top" role="navigation">\n  <div class="navbar-header">\n    <div class="navbar-brand">\n      <div class="navbar-title">\n        <div class="title-link">\n          '),s=e._triageMustache.call(t,"yield",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push("\n"),s=e["if"].call(t,"back-route",{name:"if",hash:{},hashTypes:{},hashContexts:{},fn:this.program(1,n),inverse:this.noop,types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push("        </div>\n        "),s=e._triageMustache.call(t,"title",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push("\n      </div>\n    </div>\n  </div>\n</nav>\n"),r},useData:!0})}),define("ramit/templates/components/remove-button",["exports"],function(t){"use strict";t["default"]=Ember.Handlebars.template({1:function(t,e,a,n){var s,r=this.escapeExpression,o="";return n.buffer.push('    <a href="#" '),n.buffer.push(r(e.action.call(t,"toggleConfirm",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING"],contexts:[t],data:n}))),n.buffer.push(' class="btn btn-default">\n      Cancel\n    </a>\n    <a href="#" '),n.buffer.push(r(e.action.call(t,"sendDelete",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING"],contexts:[t],data:n}))),n.buffer.push(' class="btn btn-danger">\n      <span class="glyphicon glyphicon-remove"></span>\n      '),s=e._triageMustache.call(t,"confirm-label",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push("\n    </a>\n"),o},3:function(t,e,a,n){var s,r=this.escapeExpression,o="";return n.buffer.push('    <a href="#" '),n.buffer.push(r(e.action.call(t,"toggleConfirm",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING"],contexts:[t],data:n}))),n.buffer.push(' class="btn btn-default">\n      <span class="glyphicon glyphicon-remove"></span>\n      '),s=e._triageMustache.call(t,"remove-label",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push("\n    </a>\n"),o},compiler:[6,">= 2.0.0-beta.1"],main:function(t,e,a,n){var s,r="";return n.buffer.push('<div class="btn-group">\n'),s=e["if"].call(t,"showConfirm",{name:"if",hash:{},hashTypes:{},hashContexts:{},fn:this.program(1,n),inverse:this.program(3,n),types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push("</div>\n"),r},useData:!0})}),define("ramit/templates/help-content",["exports"],function(t){"use strict";t["default"]=Ember.Handlebars.template({1:function(t,e,a,n){n.buffer.push('    <span class="glyphicon glyphicon-plus"></span> Add an account\n')},compiler:[6,">= 2.0.0-beta.1"],main:function(t,e,a,n){var s,r=e.helperMissing,o="";return n.buffer.push("<h4>Welcome to Ramit!</h4>\n\n<p>Ramit is a personal accounting app inspried by the book 'I will teach you to be rich' by Ramit Sethi.</p>\n\n<h4>How it works</h4>\n<p>It is based on the idea that for each area of spending you preload an account with money and only spend as much of it as you have in that account.</p>\n\n<h4>How to use</h4>\n<p>Create one account for each area of spending, for example <em>going out</em>, <em>clothes</em> or <em>transport</em>.</p>\n<p>Each month you put money that you actually have in each of the account by creating a transaction with the appropriate amount.</p>\n<p>Each time you spend money add a transaction with a negative amount to the account. As soon as the account is empty you cannot spend any more money.</p>\n\n<p>\n"),s=(e["link-to"]||t&&t["link-to"]||r).call(t,"new_account",{name:"link-to",hash:{"class":"btn btn-primary"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},fn:this.program(1,n),inverse:this.noop,types:["STRING"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push('</p>\n\n<h4>Remote Storage</h4>\n<p>All the data you enter is stored on your device. If you want you can back it up to a server (and synchronize it with other devices) by getting a <a href="http://remotestorage.io/get/">remoteStorage</a> account and connecting it using the widget at the bottom.</p>\n'),o},useData:!0})}),define("ramit/templates/help",["exports"],function(t){"use strict";t["default"]=Ember.Handlebars.template({compiler:[6,">= 2.0.0-beta.1"],main:function(t,e,a,n){var s=e.helperMissing,r=this.escapeExpression,o="";return n.buffer.push(r((e["nav-bar"]||t&&t["nav-bar"]||s).call(t,{name:"nav-bar",hash:{"back-route":"accounts",title:"Help"},hashTypes:{"back-route":"STRING",title:"STRING"},hashContexts:{"back-route":t,title:t},types:[],contexts:[],data:n}))),n.buffer.push('\n<div class="container">\n  '),n.buffer.push(r((e.render||t&&t.render||s).call(t,"help-content",{name:"render",hash:{},hashTypes:{},hashContexts:{},types:["STRING"],contexts:[t],data:n}))),n.buffer.push("\n</div>\n"),o},useData:!0})}),define("ramit/templates/loading",["exports"],function(t){"use strict";t["default"]=Ember.Handlebars.template({compiler:[6,">= 2.0.0-beta.1"],main:function(t,e,a,n){var s=e.helperMissing,r=this.escapeExpression,o="";return n.buffer.push(r((e["nav-bar"]||t&&t["nav-bar"]||s).call(t,{name:"nav-bar",hash:{"back-route":"accounts",title:"Ramit"},hashTypes:{"back-route":"STRING",title:"STRING"},hashContexts:{"back-route":t,title:t},types:[],contexts:[],data:n}))),n.buffer.push('\n<div class="container">\n  <div class="progress progress-striped active">\n    <div class="progress-bar" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%">\n    </div>\n  </div>\n  <p>Loading app data...</p>\n</div>\n'),o},useData:!0})}),define("ramit/templates/new_account",["exports"],function(t){"use strict";t["default"]=Ember.Handlebars.template({compiler:[6,">= 2.0.0-beta.1"],main:function(t,e,a,n){var s=e.helperMissing,r=this.escapeExpression,o="";return n.buffer.push(r((e["nav-bar"]||t&&t["nav-bar"]||s).call(t,{name:"nav-bar",hash:{"back-route":"accounts",title:"Add Account"},hashTypes:{"back-route":"STRING",title:"STRING"},hashContexts:{"back-route":t,title:t},types:[],contexts:[],data:n}))),n.buffer.push('\n<div class="container">\n  <form '),n.buffer.push(r(e.action.call(t,"createAccount",{name:"action",hash:{on:"submit"},hashTypes:{on:"STRING"},hashContexts:{on:t},types:["STRING"],contexts:[t],data:n}))),n.buffer.push('>\n    <div class="form-group">\n      '),n.buffer.push(r((e.input||t&&t.input||s).call(t,{name:"input",hash:{name:"name",placeholder:"choose an account name, e.g. eating out","class":"form-control",required:!0,value:"name"},hashTypes:{name:"STRING",placeholder:"STRING","class":"STRING",required:"BOOLEAN",value:"ID"},hashContexts:{name:t,placeholder:t,"class":t,required:t,value:t},types:[],contexts:[],data:n}))),n.buffer.push('\n    </div>\n    <div class="form-group">\n      <button type="submit" class="btn btn-primary form-control"><span class="glyphicon glyphicon-plus"></span> Add Account</button>\n    </div>\n  </form>\n</div>\n'),o},useData:!0})}),define("ramit/templates/new_transaction",["exports"],function(t){"use strict";t["default"]=Ember.Handlebars.template({compiler:[6,">= 2.0.0-beta.1"],main:function(t,e,a,n){var s=e.helperMissing,r=this.escapeExpression,o="";return n.buffer.push(r((e["nav-bar"]||t&&t["nav-bar"]||s).call(t,{name:"nav-bar",hash:{"back-model":"model","back-route":"account",title:"Add Transaction"},hashTypes:{"back-model":"ID","back-route":"STRING",title:"STRING"},hashContexts:{"back-model":t,"back-route":t,title:t},types:[],contexts:[],data:n}))),n.buffer.push('\n<div class="container">\n  <form role="form" '),n.buffer.push(r(e.action.call(t,"createTransaction",{name:"action",hash:{on:"submit"},hashTypes:{on:"STRING"},hashContexts:{on:t},types:["STRING"],contexts:[t],data:n}))),n.buffer.push('>\n    <fieldset>\n      <div class="form-group">\n        <label for="amount">Amount</label>\n        '),n.buffer.push(r((e.input||t&&t.input||s).call(t,{name:"input",hash:{step:"1",type:"number",id:"amount","class":"form-control",required:"required",value:"amount"},hashTypes:{step:"STRING",type:"STRING",id:"STRING","class":"STRING",required:"STRING",value:"ID"},hashContexts:{step:t,type:t,id:t,"class":t,required:t,value:t},types:[],contexts:[],data:n}))),n.buffer.push('\n      </div>\n      <div class="form-group">\n        <label for="description">Description</label>\n        '),n.buffer.push(r((e.input||t&&t.input||s).call(t,{name:"input",hash:{type:"text",id:"description","class":"form-control",value:"description"},hashTypes:{type:"STRING",id:"STRING","class":"STRING",value:"ID"},hashContexts:{type:t,id:t,"class":t,value:t},types:[],contexts:[],data:n}))),n.buffer.push('\n      </div>\n      <div class="form-group">\n        <button type="submit" class="btn btn-primary form-control"><span class="glyphicon glyphicon-plus"></span> Add Transaction</button>\n      </div>\n    </fieldset>\n  </form>\n</div>\n'),o},useData:!0})}),define("ramit/templates/transaction",["exports"],function(t){"use strict";t["default"]=Ember.Handlebars.template({compiler:[6,">= 2.0.0-beta.1"],main:function(t,e,a,n){var s,r=e.helperMissing,o=this.escapeExpression,i="";return n.buffer.push(o((e["nav-bar"]||t&&t["nav-bar"]||r).call(t,{name:"nav-bar",hash:{"back-model":"model.account_id","back-route":"account",title:"Transaction"},hashTypes:{"back-model":"ID","back-route":"STRING",title:"STRING"},hashContexts:{"back-model":t,"back-route":t,title:t},types:[],contexts:[],data:n}))),n.buffer.push('\n<div class="container">\n  <div class="list-group">\n    <div class="list-group-item">\n      <dt>Description</dt>\n      <dd>'),s=e._triageMustache.call(t,"model.description",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push('</dd>\n    </div>\n    <div class="list-group-item">\n      <dt>Amount</dt>\n      <dd>'),s=e._triageMustache.call(t,"model.amount",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[t],data:n}),null!=s&&n.buffer.push(s),n.buffer.push('</dd>\n    </div>\n    <div class="list-group-item">\n      <dt>Date</dt>\n      <dd>'),n.buffer.push(o((e["format-date"]||t&&t["format-date"]||r).call(t,"model.date",{name:"format-date",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[t],data:n}))),n.buffer.push('</dd>\n    </div>\n  </div>\n\n  <div class="pull-right">\n    '),n.buffer.push(o((e["remove-button"]||t&&t["remove-button"]||r).call(t,{name:"remove-button",hash:{action:"deleteTransaction","confirm-label":"Confirm Remove Transaction","remove-label":"Remove Transaction..."},hashTypes:{action:"STRING","confirm-label":"STRING","remove-label":"STRING"},hashContexts:{action:t,"confirm-label":t,"remove-label":t},types:[],contexts:[],data:n}))),n.buffer.push('\n  </div>\n  <p class="clearfix"></p>\n</div>\n'),i},useData:!0})}),define("ramit/config/environment",["ember"],function(t){var e="ramit";try{var a=e+"/config/environment",n=t["default"].$('meta[name="'+a+'"]').attr("content"),s=JSON.parse(unescape(n));return{"default":s}}catch(r){throw new Error('Could not read config from meta tag with name "'+a+'".')}}),runningTests?require("ramit/tests/test-helper"):require("ramit/app")["default"].create({});